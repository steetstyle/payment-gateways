name: Publish package

on:
  push:
    branches: ['main']

env:
  CACHED_DEPENDENCY_PATHS: |
    ${{ github.workspace }}/node_modules
  
  CACHED_BUILD_PATHS: |
    ${{ github.workspace }}/dist
    ${{ github.workspace }}/esm
  
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:
  job_install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      # we use a hash of yarn.lock as our cache key, because if it hasn't changed, our dependencies haven't changed,
      # so no need to reinstall them
      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('**/yarn.lock') }}"
      - name: Check dependency cache
        uses: actions/cache@v2
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PAT_PACKAGES }}
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}
  
  job_build_and_publish:
    name: Build and Publish
    needs: job_install_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}
      - name: Check build cache
        uses: actions/cache@v2
        id: cache_built_packages
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}
      - name: Build packages
        # Under normal circumstances, using the git SHA as a cache key, there shouldn't ever be a cache hit on the built
        # packages, and so `yarn build` should always run. This `if` check is therefore only there for testing CI issues
        # where the built packages are beside the point. In that case, you can change `BUILD_CACHE_KEY` (at the top of
        # this file) to a constant and skip rebuilding all of the packages each time CI runs.
        if: steps.cache_built_packages.outputs.cache-hit == ''
        run: yarn build
      - name: Publish
        if: steps.cache_built_packages.outputs.cache-hit == ''
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}